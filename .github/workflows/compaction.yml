name: "compaction-test"

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
  workflow_dispatch:
  
jobs:
  compaction-test:
    runs-on: ubuntu-latest
    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    steps:
      - name: Setup minio
        run: |
          docker run -d -p 9000:9000 --name minio \
                     -e "MINIO_ACCESS_KEY=minioadmin" \
                     -e "MINIO_SECRET_KEY=minioadmin" \
                     -v /tmp/data:/data \
                     -v /tmp/config:/root/.minio \
                     minio/minio server /data
                     
      - name: Install Tools
        run: | 
          wget -q https://github.com/juicedata/juicefs/releases/download/v1.0.0-beta3/juicefs-1.0.0-beta3-linux-amd64.tar.gz
          tar -zxf juicefs-1.0.0-beta3-linux-amd64.tar.gz
          sudo apt install redis-tools
          
      - name: Test Format
        run: |
          declare -a last_index=1
          function write_data(){
            echo $1>$mount_point/file_$1.txt
            last_index=$1
            sync
            echo sync succeed, index is $1
          }
          
          meta_url=redis://127.0.0.1/1
          mount_point=/tmp/sync-test/
          ./juicefs format --storage minio --bucket http://localhost:9000/jfs-test --access-key minioadmin --secret-key minioadmin $meta_url myjfs
          ./juicefs mount $meta_url $mount_point -d
          for i in {1..10000}; do
            write_data $i &
          done
          sleep 3 
          redis-cli shutdown
          sleep 3
          container_id=$(docker ps -a | grep redis | awk '{print $1}')
          docker restart $container_id
          sleep 3
          cat $mount_point/file_$last_index.txt
          exit 1
          
      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1
