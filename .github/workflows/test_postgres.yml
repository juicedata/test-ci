name: "test_postgres"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '*/15 10 * * *'
  workflow_dispatch:
  
jobs:
  test_postgres:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        
      - name: Connect to PostgreSQL
        run: |
          sudo chmod 777 /var/ 
          meta_url=postgres://postgres:postgres@127.0.0.1:5432/sync_test?sslmode=disable
          export PGPASSWORD="postgres"
          db_name=$(basename $meta_url | awk -F? '{print $1}')
          printf "\set AUTOCOMMIT on\ndrop database if exists $db_name; create database $db_name; " |  psql -U postgres -h localhost 
          wget -q https://github.com/juicedata/juicefs/releases/download/v1.0.0-beta2/juicefs-1.0.0-beta2-linux-amd64.tar.gz
          tar -xzf juicefs-1.0.0-beta2-linux-amd64.tar.gz
          ./juicefs format $meta_url sync-test
          ./juicefs mount $meta_url sync-test -d
          echo "abc" > sync-test/def.txt
          ./juicefs dump $meta_url
          ./juicefs umount sync-test
          ./juicefs format redis://localhost:6379/1 test2
          
      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1
          
