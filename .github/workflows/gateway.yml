name: "gateway-test"

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
  workflow_dispatch:
  
jobs:
  gateway-test:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout source code for sync test
        uses: actions/checkout@v2
        with:
          repository: juicedata/juicefs
          path: juicefs-source
          
      - name: Init 
        run: |
          sudo /etc/init.d/mysql start
          
      - name: Download
        run: | 
          wget -q https://github.com/juicedata/juicefs/releases/download/v1.0.0-beta3/juicefs-1.0.0-beta3-linux-amd64.tar.gz
          tar -zxf juicefs-1.0.0-beta3-linux-amd64.tar.gz
          wget -q https://dl.minio.io/client/mc/release/linux-amd64/mc
          chmod +x mc 
          sudo apt install md5deep
          
      - name: Test1
        run: | 
          meta_url="mysql://root:root@(127.0.0.1)/test_gateway"
          db_name=$(basename $meta_url)
          volume=myjfs
          mp=/tmp/myjfs
          mysql -uroot -proot -e "drop database if exists $db_name; create database $db_name;" 
          export MINIO_ROOT_USER=minioadmin
          export MINIO_ROOT_PASSWORD=minioadmin
          ./juicefs format $meta_url $volume
          ./juicefs gateway $meta_url localhost:9000 &
          mkdir data
          for i in {1..1000}; do
            dd if=/dev/urandom of=data/file_$i iflag=fullblock,count_bytes bs=4k count='400K' > /dev/null
          done
          
          md5deep -lr data/ > sum.md5
          ./mc alias set minio http://localhost:9000 minioadmin minioadmin --api S3v4
          ./mc mb minio/$volume
          ./mc cp --recursive data/  minio/$volume/data
          
          ./juicefs mount -d $meta_url $mp
          md5deep -lrX $mp/data/ > sum.md5
          
          exit 1
    

      - name: Test2
        run: |
          exit 0
          meta_url="mysql://root:root@(127.0.0.1)/test_gateway"
          db_name=$(basename $meta_url)
          volume=myjfs
          mp=/tmp/myjfs
          mysql -uroot -proot -e "drop database if exists $db_name; create database $db_name;" 
          export MINIO_ROOT_USER=minioadmin
          export MINIO_ROOT_PASSWORD=minioadmin
          ./juicefs format $meta_url $volume
          ./juicefs gateway $meta_url localhost:9000 &
          
          mkdir test_dir
          for i in {1..1000}; do
            mkdir test_dir/sub_dir_$i
          done
          ./juicefs sync ./juicefs-source/  s3://minioadmin:minioadmin@localhost:9000/$volume/juicefs-source/ --no-https -p 20
          #./juicefs sync test_dir/  s3://minioadmin:minioadmin@localhost:9000/$volume/test_dir/ --no-https -p 20
          
          ./juicefs mount -d $meta_url $mp
          rm -rf $mp/juicefs-source 
          
      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1
