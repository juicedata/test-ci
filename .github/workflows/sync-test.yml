name: "sync-test"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '*/15 10 * * *'
  workflow_dispatch:
  
jobs:
  sync-test:
    runs-on: ubuntu-latest
    steps:
      - name: Set Variable
        id: vars
        run: |
          echo ::set-output name=META_MYSQL::"mysql://root:root@\(127.0.0.1\)/sync_test"
          echo ::set-output name=MOUNT_POINT::/tmp/juicefs-sync-test/
          echo ::set-output name=BUCKET::/var/jfs/
          echo ::set-output name=NAME::sync-test
          echo ::set-output name=DUMP_FILE::meta_with_4M_Empty_files.json
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Checkout source code for test
        uses: actions/checkout@v2
        with:
          repository: juicedata/juicefs
          path: source-dir

      - name: Test Sync
        run: |
          sudo chmod 777 /var/ 
          meta_url=${{ steps.vars.outputs.META_MYSQL }}
          sudo /etc/init.d/mysql start
          db_name=$(basename $meta_url | awk -F? '{print $1}')
          mysql -uroot -proot -e "drop database if exists $db_name; create database $db_name;" 
          wget -q https://github.com/juicedata/juicefs/releases/download/v1.0.0-beta2/juicefs-1.0.0-beta2-linux-amd64.tar.gz
          tar -xzf juicefs-1.0.0-beta2-linux-amd64.tar.gz

          while IFS= read -r option; do
            printf 'option is %s\n' "$option" 
            test -d jfs_sync_dir && rm jfs_sync_dir/{*,.*} -rf || true
            ./juicefs sync  source-dir/ jfs_sync_dir/ $option
            test -d rsync_dir && rm rsync_dir/{*,.*} -rf || true
            rsync -a source-dir/ rsync_dir/ $option
            diff -ur jfs_sync_dir rsync_dir 2>&1 | tee -a result.txt || true
          done < .github/workflows/sync-options.txt
          while IFS= read -r option; do
            printf 'option is %s\n' "$option" 
            ./juicefs format $meta_url sync-test
            ./juicefs mount $meta_url ${{ steps.vars.outputs.MOUNT_POINT }} -d
            ./juicefs sync source_dir/ ${{ steps.vars.outputs.MOUNT_POINT }} 
            test -d jfs_sync_dir && rm jfs_sync_dir/ -rf 
            mkdir jfs_sync_dir
            ./juicefs sync  ${{ steps.vars.outputs.MOUNT_POINT }}/ jfs_sync_dir/ $option --exclude ".accesslog" --exclude ".trash"
            test -d rsync_dir && rm rsync_dir/ -rf 
            mkdir rsync_dir
            rsync -a ${{ steps.vars.outputs.MOUNT_POINT }}/ rsync_dir/ $option --exclude ".accesslog" --exclude ".trash"
            diff -ur jfs_sync_dir rsync_dir 2>&1 | tee -a result.txt || true
          done < .github/workflows/sync-options.txt
          if [[ -z $(grep '[^[:space:]]' result.txt) ]] ; then
            exit 0
          else
            printf "Fatal: diff file is not empty, please check result.txt in the artifact"
            exit 1
  、      fi 
      - name: Save test reuslt
        if: ${{always()}}
        uses: actions/upload-artifact@v2
        with: 
          name: result.txt
          path: result.txt
      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1
